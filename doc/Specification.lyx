#LyX 1.1 created this file. For more info see http://www.lyx.org/
\lyxformat 2.15
\textclass article
\language default
\inputencoding latin1
\fontscheme times
\graphics default
\paperfontsize default
\spacing single 
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Title

oAESis specification
\layout Author

Christer Gustavsson
\layout Abstract

This document specifies the design and internal structure of oAESis.
\layout Section
\pagebreak_top 
General
\layout Subsection

Introduction
\layout Standard

This document specifies the design of oAESis.
\layout Subsection

System Overview
\layout Standard

TBD
\layout Section

Internal structure
\layout Standard

Internal interfaces and principles are discussed in this section.
\layout Subsection

Server
\layout Standard

The server handles things that have to be shared or synchronized between
 applications.
 It may be implemented as a device driver or as a standalone process.
 Services that the server offers shall be quick for it to complete.
\layout Subsubsection

Event handler
\layout Subsubsection

Display handler
\layout Subsection

Client library
\layout Standard

The client library is the link between applications and the oAESis server.
\layout Subsection

Launcher application
\layout Standard

The launcher application is a GEM application that handles starting of accessori
es and programs.
\layout Subsection

Startup sequence
\layout Enumerate

Start server
\layout Enumerate

Start launcher application
\layout Subsection

Interface between the server and the client library
\layout Standard

All data passed between the client library and the server shall be in network
 order.
 Its size shall be well defined.
\layout Subsubsection

SRV_APPL_CONTROL
\layout Subsubsection

SRV_APPL_INIT
\layout Standard

Get a new application id.
\layout Subsubsection

SRV_APPL_WRITE
\layout Standard

Send data to an application.
\layout Subsubsection

SRV_APPL_FIND
\layout Standard

Search for an application by its name.
\layout Subsubsection

SRV_APPL_SEARCH
\layout Standard

Search for an application by its type.
\layout Subsubsection

SRV_APPL_EXIT
\layout Standard

Free an application id.
\layout Subsubsection

SRV_APPL_RESERVE
\layout Standard

Reserve application id for a specific process.
\layout Subsubsection

SRV_EVNT_MULTI
\layout Standard

Wait for an event to occur.
\layout Subsubsection

SRV_MENU_BAR
\layout Standard

Register that a menu bar is or isn't available.
\layout Subsubsection

SRV_MENU_REGISTER
\layout Standard

Set application name to be shown in the application list in the menu.
\layout Subsubsection

SRV_GRAF_MOUSE
\layout Standard

Alter appearance of mouse cursor.
\layout Subsubsection

SRV_GRAF_MKSTATE
\layout Standard

Get coordinates of mouse pointer and state of mouse buttons as well as state
 of shift keys.
\layout Subsubsection

SRV_WIND_CREATE
\layout Standard

Create a new window.
\layout Subsubsection

SRV_WIND_OPEN
\layout Standard

Open a window.
\layout Subsubsection

SRV_WIND_CLOSE
\layout Standard

Close a window.
\layout Subsubsection

SRV_WIND_DELETE
\layout Standard

Delete a window.
\layout Subsubsection

SRV_WIND_GET
\layout Standard

Get information about a window.
\layout Subsubsection

SRV_WIND_SET
\layout Standard

Set information about a window.
\layout Subsubsection

SRV_WIND_FIND
\layout Standard

Find a window by coordinates.
\layout Subsubsection

SRV_WIND_UPDATE
\layout Standard

Get or release window or mouse control semaphore.
\layout Subsubsection

SRV_WIND_NEW
\layout Standard

Close and delete all windows of an application.
\layout Subsubsection

SRV_VDI_CALL
\layout Standard

Make vdi call through server.
\layout Subsubsection

SRV_MEMORY_ALLOC
\layout Standard

Allocate memory to be used in server for VDI call.
\layout Subsubsection

SRV_MEMORY_FREE
\layout Standard

Free memory that was used in server for VDI call.
\layout Subsubsection

SRV_MEMORY_SET
\layout Standard

Set memory to be used in server for VDI call.
\layout Subsubsection

SRV_MEMORY_GET
\layout Standard

Get memory that was used in server for VDI call.
\layout Section

Application interfaces
\layout Standard

All external interfaces are discussed in this section.
\layout Subsection

Client library API
\layout Standard

The client API honors Atari AES as described by The Atari Compendium.
\layout Subsection

Resources
\layout Standard

Resource files and resource structures are compatible with Atari AES as
 described by The Atari Compendium.
\layout Section

References
\layout Enumerate

The Atari Compendium
\layout Section

Terminology
\layout Enumerate

AES
\layout Enumerate

API
\layout Enumerate

Client library
\layout Enumerate

Display
\layout Enumerate

Network order
\layout Enumerate

Resource file
\layout Enumerate

Server
\the_end
